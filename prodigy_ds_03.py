# -*- coding: utf-8 -*-
"""Prodigy_DS_03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YTCH4KvPEp1TnVZehAVYPWwAWiQkwfez
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

import warnings
warnings.filterwarnings('ignore')

# %matplotlib inline

df = pd.read_csv('bank-additional.csv',delimiter=';')
df.rename(columns={'y':'deposit'}, inplace=True)
df.head()

df.head()

df.columns

df.describe()

df.isna().sum()

df.describe(include='object')

high_corr_cols = ['emp.var.rate','euribor3m','nr.employed']

df1 = df.copy()
df1.columns

from sklearn.preprocessing import LabelEncoder
lb = LabelEncoder()
df_encoded = df1.apply(lb.fit_transform)
df_encoded

from sklearn.model_selection import train_test_split

print(4119*0.25)

x = df_encoded.drop('deposit',axis=1)
y = df_encoded['deposit']
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.25,random_state=1)

from sklearn.tree import DecisionTreeClassifier

dt = DecisionTreeClassifier(criterion='gini',max_depth=5,min_samples_split=10)
dt.fit(x_train,y_train)

from sklearn.tree import plot_tree
cn = ['no','yes']
fn = x_train.columns
print(fn)
print(cn)

d = DecisionTreeClassifier(criterion='entropy',max_depth=4,min_samples_split=15)
d.fit(x_train,y_train)

plt.figure(figsize=(15,15))
plot_tree(d,class_names=cn,filled=True)
plt.show()